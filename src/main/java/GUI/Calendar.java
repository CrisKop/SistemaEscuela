/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package GUI;

import com.toedter.calendar.JCalendar;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Arrays;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author criskop
 */
public class Calendar extends javax.swing.JDialog {

    
        private String fechaSeleccionada;
        private String fecha;
    /**
     * Creates new form Calendar
     */
    public Calendar(java.awt.Frame parent, boolean modal, String fecha) {
        super(parent, modal);
        initComponents();
  
            this.fecha = fecha;
            
             establecerFecha();  // Establece la fecha una vez que el JDialog es visible
     
    }
    
 
    
    public void establecerFecha(){
        
         String[] partesFechaHora = dividirFechaHora(fecha);
         
         System.out.println("Partes fecha: ");
         System.out.println(Arrays.toString(partesFechaHora));
         System.out.println("Fecha: " + fecha);
         
        if(fecha != null && !fecha.isEmpty()){
                 establecerFechaEnCalendar(partesFechaHora[0], jCalendar);
        establecerHoraEnInput(partesFechaHora[1], jCalendar);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        calendarContainer = new javax.swing.JPanel();
        jCalendar = new com.toedter.calendar.JCalendar();
        jPanel1 = new javax.swing.JPanel();
        jButton3 = new javax.swing.JButton();
        boxHora = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        calendarContainer.setLayout(new java.awt.CardLayout());

        jCalendar.setFont(new java.awt.Font("SansSerif", 0, 20)); // NOI18N
        jCalendar.setMinimumSize(new java.awt.Dimension(400, 250));
        jCalendar.setPreferredSize(new java.awt.Dimension(400, 250));
        calendarContainer.add(jCalendar, "card2");

        getContentPane().add(calendarContainer, java.awt.BorderLayout.PAGE_START);

        jPanel1.setMinimumSize(new java.awt.Dimension(400, 100));
        jPanel1.setPreferredSize(new java.awt.Dimension(400, 100));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton3.setText("Aceptar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 40, 400, 60));

        boxHora.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        boxHora.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "00:00:00", "00:15:00", "00:30:00", "00:45:00", "01:00:00", "01:15:00", "01:30:00", "01:45:00", "02:00:00", "02:15:00", "02:30:00", "02:45:00", "03:00:00", "03:15:00", "03:30:00", "03:45:00", "04:00:00", "04:15:00", "04:30:00", "04:45:00", "05:00:00", "05:15:00", "05:30:00", "05:45:00", "06:00:00", "06:15:00", "06:30:00", "06:45:00", "07:00:00", "07:15:00", "07:30:00", "07:45:00", "08:00:00", "08:15:00", "08:30:00", "08:45:00", "09:00:00", "09:15:00", "09:30:00", "09:45:00", "10:00:00", "10:15:00", "10:30:00", "10:45:00", "11:00:00", "11:15:00", "11:30:00", "11:45:00", "12:00:00", "12:15:00", "12:30:00", "12:45:00", "13:00:00", "13:15:00", "13:30:00", "13:45:00", "14:00:00", "14:15:00", "14:30:00", "14:45:00", "15:00:00", "15:15:00", "15:30:00", "15:45:00", "16:00:00", "16:15:00", "16:30:00", "16:45:00", "17:00:00", "17:15:00", "17:30:00", "17:45:00", "18:00:00", "18:15:00", "18:30:00", "18:45:00", "19:00:00", "19:15:00", "19:30:00", "19:45:00", "20:00:00", "20:15:00", "20:30:00", "20:45:00", "21:00:00", "21:15:00", "21:30:00", "21:45:00", "22:00:00", "22:15:00", "22:30:00", "22:45:00", "23:00:00", "23:15:00", "23:30:00", "23:45:00" }));
        boxHora.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boxHoraActionPerformed(evt);
            }
        });
        jPanel1.add(boxHora, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 400, 40));

        getContentPane().add(jPanel1, java.awt.BorderLayout.PAGE_END);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
      fechaSeleccionada = obtenerFechaFormateada(jCalendar, boxHora.getSelectedItem().toString());
      dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void boxHoraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boxHoraActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_boxHoraActionPerformed

    
        public String getFechaSeleccionada() {
        return fechaSeleccionada;
    }
        
            // Método para dividir el String en la parte de la fecha y la parte de la hora
    public static String[] dividirFechaHora(String fechaString) {
        // Dividir el String en dos partes usando el espacio como separador
        String[] partes = fechaString.split(" ");
        return partes; // Retorna un arreglo con la fecha y la hora
    }
    
      // Método para establecer solo la fecha en el JCalendar
    public static void establecerFechaEnCalendar(String fechaParte, JCalendar calendario) {
        try {
            // Crear un SimpleDateFormat para convertir la fecha
            SimpleDateFormat formatoFecha = new SimpleDateFormat("yyyy-MM-dd");

            // Parsear la fecha
            Date fecha = formatoFecha.parse(fechaParte);

            // Establecer la fecha en el JCalendar
            calendario.setDate(fecha);

        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    public void establecerHoraEnInput(String fechaParte, JCalendar calendario){
         // Crear un SimpleDateFormat para convertir la fecha
            SimpleDateFormat formatoFecha = new SimpleDateFormat("HH:mm:ss");

            // Parsear la fecha
            String fecha = fechaParte;
           

          for (int i = 0; i < boxHora.getItemCount(); i++) {
                String hora = boxHora.getItemAt(i);
                if (hora.equals(fecha.toString())) {
                    boxHora.setSelectedIndex(i);
                    break;
                }
            }
    }
    
          public String obtenerFechaFormateada(JCalendar calendario, String hora) {
        if (calendario == null || calendario.getDate() == null || hora == null || hora.isEmpty()) {
            return null; // o lanzar una excepción si prefieres
        }

        SimpleDateFormat formato = new SimpleDateFormat("yyyy-MM-dd");
        
        String fechaFinal = formato.format(calendario.getDate()) + " " + boxHora.getSelectedItem().toString();
              System.out.println("Fecha final: "+ fechaFinal);
        return fechaFinal;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Calendar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Calendar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Calendar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Calendar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Calendar dialog = new Calendar(new javax.swing.JFrame(), true, null);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> boxHora;
    private javax.swing.JPanel calendarContainer;
    private javax.swing.JButton jButton3;
    private com.toedter.calendar.JCalendar jCalendar;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
